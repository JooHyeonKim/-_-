package rsa3;

import java.io.BufferedReader;
import java.io.FileReader;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Base64;

import rsa2.User;

public class RSATest {

    public static void main(String[] args) throws Exception {
        // RSA 키쌍 생성
        KeyPair keyPair = CipherUtil.genRSAKeyPair();

        PublicKey publicKey = keyPair.getPublic();
        PrivateKey privateKey = keyPair.getPrivate();
        
        BufferedReader fileReader = new BufferedReader(new FileReader("user.txt"));

		// a line from the file
		String line;
		String[] person=new String[50];
		int p=0;

		// read lines until we read a line that is null (i.e. no more lines)
		while((line = fileReader.readLine()) != null) {
		       // split the line, returns an array of parts
		       person[p++] =line; 
		}
		
//		for(int i=0;i<p;i++) {
//			System.out.println(person[i]);
//		}
//		
		int[] resident_num=new int[20];
		int[] phone_num=new int[20];
		
		User user[]=new User[20];
		for(int i=1;i<p;i++) {
			String[] tmp=person[i].split("/");
			resident_num[i]=Integer.parseInt(tmp[2]); //주민등록번호
			phone_num[i]=Integer.parseInt(tmp[4]); //전화번호
//			user[i].no=Integer.parseInt(tmp[0]);
//			user[i].name=tmp[1];
//			user[i].resident_no=Integer.parseInt(tmp[2]);
//			user[i].address=tmp[3];
//			user[i].phone_no=Integer.parseInt(tmp[4]);
//			user[i].borrow_num=Integer.parseInt(tmp[5]);
		}
		
		for(int i=1;i<p;i++) {
			System.out.println(resident_num[i]+" "+phone_num[i]);
		}
		int res_no=830514;
		int phone=15428475;
	        

        String plainText = "암호화 할 문자열 입니다.";

        // Base64 인코딩된 암호화 문자열 입니다.
        String encrypted = CipherUtil.encryptRSA(plainText, publicKey);
        System.out.println("encrypted : " + encrypted);

        // 복호화 합니다.
        String decrypted = CipherUtil.decryptRSA(encrypted, privateKey);
        System.out.println("decrypted : " + decrypted);

        // 공개키를 Base64 인코딩한 문자일을 만듭니다.
        byte[] bytePublicKey = publicKey.getEncoded();
        String base64PublicKey = Base64.getEncoder().encodeToString(bytePublicKey);
        System.out.println("Base64 Public Key : " + base64PublicKey);

        // 개인키를 Base64 인코딩한 문자열을 만듭니다.
        byte[] bytePrivateKey = privateKey.getEncoded();
        String base64PrivateKey = Base64.getEncoder().encodeToString(bytePrivateKey);
        System.out.println("Base64 Private Key : " + base64PrivateKey);

    }

}
